""" Sequence index definitions for samplesheet generator.

2013-03-14
Removed the interpretation of "_{number}" as a number for
a TruSeq Illumina index. Now a prefix to the number is required.
This was done to reduce the risk of misinterpreting a sample id
as an index specification.

Per Kraulis, Pontus Larsson
"""

# The module variabel BASIC_LOOKUP contains the primary definitions of
# the sequence indexes and their names.
BASIC_LOOKUP = dict()

# The module variable INDEX_LOOKUP, contains a number of aliases
# for the index names.
INDEX_LOOKUP = dict()

# The Illumina index number-to-sequence mappings have been double-checked
# against the documentation from Illumina dated 2011-10-11.
# index1-index27 are from the table "TruSeq RNA and DNA Sample Prep Kits".
# Identifying prefixes: 'index', '', 'idx', 'in', 'i'
ILLUMINA = dict(index1='ATCACG',
                index2='CGATGT',
                index3='TTAGGC',
                index4='TGACCA',
                index5='ACAGTG',
                index6='GCCAAT',
                index7='CAGATC',
                index8='ACTTGA',
                index9='GATCAG',
                index10='TAGCTT',
                index11='GGCTAC',
                index12='CTTGTA',
                index13='AGTCAA',
                index14='AGTTCC',
                index15='ATGTCA',
                index16='CCGTCC',
                index17='GTAGAG', # 17 is "reserved" by Illumina, used by others
                index18='GTCCGC',
                index19='GTGAAA',
                index20='GTGGCC',
                index21='GTTTCG',
                index22='CGTACG',
                index23='GAGTGG',
                index24='GGTAGC', # 24 is "reserved" by Illumina, used by others
                index25='ACTGAT',
                # index26 is "reserved" by Illumina
                index27='ATTCCT')
BASIC_LOOKUP.update(ILLUMINA)
INDEX_LOOKUP.update(ILLUMINA)
INDEX_LOOKUP.update(dict([(k.replace('index', 'idx'), v)
                          for k,v in ILLUMINA.items()]))
INDEX_LOOKUP.update(dict([(k.replace('index', 'in'), v)
                          for k,v in ILLUMINA.items()]))
INDEX_LOOKUP.update(dict([(k.replace('index', 'i'), v)
                          for k,v in ILLUMINA.items()]))

# rpi1-rpi48 are from the table "TruSeq Small RNA Sample Prep Kits",
# after reverse-complement conversion.
# RPI indexes for "TruSeq Small RNA", 
# These are reverse-complement of Illumina documentation
# Identifying prefixes: 'rpi', 'r', 'indexr'
RPI = dict(rpi1='ATCACG',
           rpi2='CGATGT',
           rpi3='TTAGGC',
           rpi4='TGACCA',
           rpi5='ACAGTG',
           rpi6='GCCAAT',
           rpi7='CAGATC',
           rpi8='ACTTGA',
           rpi9='GATCAG',
           rpi10='TAGCTT',
           rpi11='GGCTAC',
           rpi12='CTTGTA',
           rpi13='AGTCAA',
           rpi14='AGTTCC',
           rpi15='ATGTCA',
           rpi16='CCGTCC',
           rpi17='GTAGAG',
           rpi18='GTCCGC',
           rpi19='GTGAAA',
           rpi20='GTGGCC',
           rpi21='GTTTCG',
           rpi22='CGTACG',
           rpi23='GAGTGG',
           rpi24='GGTAGC',
           rpi25='ACTGAT',
           rpi26='ATGAGC',
           rpi27='ATTCCT',
           rpi28='CAAAAG',
           rpi29='CAACTA',
           rpi30='CACCGG',
           rpi31='CACGAT',
           rpi32='CACTCA',
           rpi33='CAGGCG',
           rpi34='CATGGC',
           rpi35='CATTTT',
           rpi36='CCAACA',
           rpi37='CGGAAT',
           rpi38='CTAGCT',
           rpi39='CTATAC',
           rpi40='CTCAGA',
           rpi41='GACGAC',
           rpi42='TAATCG',
           rpi43='TACAGC',
           rpi44='TATAAT',
           rpi45='TCATTC',
           rpi46='TCCCGA',
           rpi47='TCGAAG',
           rpi48='TCGGCA')
BASIC_LOOKUP.update(RPI)
INDEX_LOOKUP.update(RPI)
INDEX_LOOKUP.update(dict([(k.replace('rpi', 'r'), v)
                          for k,v in RPI.items()]))
INDEX_LOOKUP.update(dict([(k.replace('rpi', 'indexr'), v)
                          for k,v in RPI.items()]))

# The Agilent indexes agilent1-agilent96 are from the Google Docs spreadsheet
# "illumina 96 barcodes plate format_column arrangement" by Joel Gruselius.
# Identifying prefixes: 'agilent', 'a', 'indexa'
AGILENT = dict(agilent1='ATCACG',
               agilent2='CGATGT',
               agilent3='TTAGGC',
               agilent4='TGACCA',
               agilent5='ACAGTG',
               agilent6='GCCAAT',
               agilent7='CAGATC',
               agilent8='ACTTGA',
               agilent9='GATCAG',
               agilent10='TAGCTT',
               agilent11='GGCTAC',
               agilent12='CTTGTA',
               agilent13='AAACAT',
               agilent14='CAAAAG',
               agilent15='GAAACC',
               agilent16='TAATCG',
               agilent17='AAAGCA',
               agilent18='CAACTA',
               agilent19='GAATAA',
               agilent20='TACAGC',
               agilent21='AAATGC',
               agilent22='CACCGG',
               agilent23='GACGGA',
               agilent24='AGGCCG',
               agilent25='AACAAA',
               agilent26='CACGAT',
               agilent27='GATATA',
               agilent28='TATAAT',
               agilent29='AACCCC',
               agilent30='CACTCA',
               agilent31='GATGCT',
               agilent32='TCATTC',
               agilent33='AACTTG',
               agilent34='CAGGCG',
               agilent35='GCAAGG',
               agilent36='ATAATT',
               agilent37='AAGACT',
               agilent38='CATGGC',
               agilent39='GCACTT',
               agilent40='TCCCGA',
               agilent41='AAGCGA',
               agilent42='CATTTT',
               agilent43='GCCGCG',
               agilent44='TCGAAG',
               agilent45='AAGGAC',
               agilent46='CCAACA',
               agilent47='GCCTTA',
               agilent48='ATACGG',
               agilent49='AATAGG',
               agilent50='CCACGC',
               agilent51='GCTCCA',
               agilent52='TCGGCA',
               agilent53='ACAAAC',
               agilent54='CCCATG',
               agilent55='GGCACA',
               agilent56='TCTACC',
               agilent57='ACATCT',
               agilent58='CCCCCT',
               agilent59='GGCCTG',
               agilent60='ATCCTA',
               agilent61='ACCCAG',
               agilent62='CCGCAA',
               agilent63='GTAGAG',
               agilent64='TGAATG',
               agilent65='ACCGGC',
               agilent66='CCTTAG',
               agilent67='GTCCGC',
               agilent68='TGCCAT',
               agilent69='ACGATA',
               agilent70='CGAGAA',
               agilent71='GTGAAA',
               agilent72='ATCTAT',
               agilent73='ACTCTC',
               agilent74='CGGAAT',
               agilent75='GTGGCC',
               agilent76='TGCTGG',
               agilent77='ACTGAT',
               agilent78='CTAGCT',
               agilent79='GTTTCG',
               agilent80='TGGCGC',
               agilent81='AGAAGA',
               agilent82='CTATAC',
               agilent83='CGTACG',
               agilent84='ATGAGC',
               agilent85='AGATAG',
               agilent86='CTCAGA',
               agilent87='GAGTGG',
               agilent88='TTCGAA',
               agilent89='AGCATC',
               agilent90='CTGCTG',
               agilent91='GGTAGC',
               agilent92='TTCTCC',
               agilent93='AGCGCT',
               agilent94='CCGTCC',
               agilent95='ATTCCT',
               agilent96='AGGTTT')
BASIC_LOOKUP.update(AGILENT)
INDEX_LOOKUP.update(AGILENT)
INDEX_LOOKUP.update(dict([(k.replace('agilent', 'a'), v)
                          for k,v in AGILENT.items()]))
INDEX_LOOKUP.update(dict([(k.replace('agilent', 'indexa'), v)
                          for k,v in AGILENT.items()]))

# Indexes mondrian1-mondrian16 are from the PDF "User Guide for ovation
# SP Ultralow Library System" a.k.a. Mondrian system.
# Identifying prefixes: 'mondrian', 'm', 'indexm'
MONDRIAN = dict(mondrian1='AAGGGA',
                mondrian2='CCTTCA',
                mondrian3='GGACCC',
                mondrian4='TTCAGC',
                mondrian5='AAGACG',
                mondrian6='CCTCGG',
                mondrian7='GGATGT',
                mondrian8='TTCGCT',
                mondrian9='ACACGA',
                mondrian10='CACACA',
                mondrian11='GTGTTA',
                mondrian12='TGTGAA',
                mondrian13='ACAAAC',
                mondrian14='CACCTC',
                mondrian15='GTGGCC',
                mondrian16='TGTTGC')
BASIC_LOOKUP.update(MONDRIAN)
INDEX_LOOKUP.update(MONDRIAN)
INDEX_LOOKUP.update(dict([(k.replace('mondrian', 'm'), v)
                          for k,v in MONDRIAN.items()]))
INDEX_LOOKUP.update(dict([(k.replace('mondrian', 'indexm'), v)
                          for k,v in MONDRIAN.items()]))

# Indexes halo1-halo96 are from the PDF "Haloplex PCR Target Enrichment &
# Library Preparation Guide, Version 2.0, November 2011"
# Identifying prefixes: 'halo', 'h', 'indexh'
HALO = dict(halo1='CTCGGT',
            halo2='AATCGT',
            halo3='GCGCGT',
            halo4='CGAAGT',
            halo5='TATTCT',
            halo6='AGATCT',
            halo7='CAGGCT',
            halo8='TCCGCT',
            halo9='GGTCCT',
            halo10='TCGTAT',
            halo11='GTCCAT',
            halo12='GATTGG',
            halo13='TTACGG',
            halo14='CCTTCG',
            halo15='GGAGCG',
            halo16='ACGCAG',
            halo17='TGCCAG',
            halo18='GAGAAG',
            halo19='ATCAAG',
            halo20='CGATTC',
            halo21='ACCGTC',
            halo22='TAAGTC',
            halo23='TTCATC',
            halo24='AGCAGC',
            halo25='GCGTCC',
            halo26='AGGTAC',
            halo27='ACGTTA',
            halo28='AACCTA',
            halo29='TGGATA',
            halo30='TTATCA',
            halo31='ATAGAA',
            halo32='CTGGTT',
            halo33='GGAGTT',
            halo34='TACCTT',
            halo35='TCTACT',
            halo36='ATAACT',
            halo37='GAGTAT',
            halo38='AGCTAT',
            halo39='CAAGAT',
            halo40='TCGTTG',
            halo41='ACTCTG',
            halo42='GATATG',
            halo43='TATGCG',
            halo44='GTACCG',
            halo45='CAGACG',
            halo46='CCTGAG',
            halo47='TATTGC',
            halo48='GAGAGC',
            halo49='ATATAC',
            halo50='GCCGAC',
            halo51='CTTAAC',
            halo52='GTTCTA',
            halo53='CAGCTA',
            halo54='ACCGGA',
            halo55='CTCCGA',
            halo56='TTAAGA',
            halo57='GGTTCA',
            halo58='ACGCCA',
            halo59='CGACCA',
            halo60='TCGGAA',
            halo61='GGCCTT',
            halo62='AGACGT',
            halo63='CATAGT',
            halo64='GATGAT',
            halo65='CCTATG',
            halo66='AACTGG',
            halo67='GCGAGG',
            halo68='TTCTCG',
            halo69='GCTGCG',
            halo70='CTGGCG',
            halo71='CGAACG',
            halo72='ATTCAG',
            halo73='CCGTTC',
            halo74='TACTTC',
            halo75='GAGGTC',
            halo76='ATCCTC',
            halo77='TCAATC',
            halo78='CTTCGC',
            halo79='GACCGC',
            halo80='ATAAGC',
            halo81='CATTAC',
            halo82='TGATAC',
            halo83='CTAGAC',
            halo84='TAGAAC',
            halo85='ATGGTA',
            halo86='GTACGA',
            halo87='AAGAGA',
            halo88='GGCAGA',
            halo89='GGAGAA',
            halo90='GCGCAA',
            halo91='GCGGTT',
            halo92='TTAGTT',
            halo93='AGAATT',
            halo94='ATCAGT',
            halo95='GGCGCT',
            halo96='ACTTAT')
BASIC_LOOKUP.update(HALO)
INDEX_LOOKUP.update(HALO)
INDEX_LOOKUP.update(dict([(k.replace('halo', 'h'), v)
                          for k,v in HALO.items()]))
INDEX_LOOKUP.update(dict([(k.replace('halo', 'indexh'), v)
                          for k,v in HALO.items()]))

# Indexes haloht1-haloht96 are the new 8-bp indexes for Haloplex.
# From a CSV file "oligo_reference-halo8.csv" provided by Joel Gruselius.
# Identifying prefixes: 'haloht', 'hht'
HALOHT = dict(haloht1='AACGTGAT',
              haloht2='AAACATCG',
              haloht3='ATGCCTAA',
              haloht4='AGTGGTCA',
              haloht5='ACCACTGT',
              haloht6='ACATTGGC',
              haloht7='CAGATCTG',
              haloht8='CATCAAGT',
              haloht9='CGCTGATC',
              haloht10='ACAAGCTA',
              haloht11='CTGTAGCC',
              haloht12='AGTACAAG',
              haloht13='AACAACCA',
              haloht14='AACCGAGA',
              haloht15='AACGCTTA',
              haloht16='AAGACGGA',
              haloht17='AAGGTACA',
              haloht18='ACACAGAA',
              haloht19='ACAGCAGA',
              haloht20='ACCTCCAA',
              haloht21='ACGCTCGA',
              haloht22='ACGTATCA',
              haloht23='ACTATGCA',
              haloht24='AGAGTCAA',
              haloht25='AGATCGCA',
              haloht26='AGCAGGAA',
              haloht27='AGTCACTA',
              haloht28='ATCCTGTA',
              haloht29='ATTGAGGA',
              haloht30='CAACCACA',
              haloht31='CAAGACTA',
              haloht32='CAATGGAA',
              haloht33='CACTTCGA',
              haloht34='CAGCGTTA',
              haloht35='CATACCAA',
              haloht36='CCAGTTCA',
              haloht37='CCGAAGTA',
              haloht38='CCGTGAGA',
              haloht39='CCTCCTGA',
              haloht40='CGAACTTA',
              haloht41='CGACTGGA',
              haloht42='CGCATACA',
              haloht43='CTCAATGA',
              haloht44='CTGAGCCA',
              haloht45='CTGGCATA',
              haloht46='GAATCTGA',
              haloht47='GACTAGTA',
              haloht48='GAGCTGAA',
              haloht49='GATAGACA',
              haloht50='GCCACATA',
              haloht51='GCGAGTAA',
              haloht52='GCTAACGA',
              haloht53='GCTCGGTA',
              haloht54='GGAGAACA',
              haloht55='GGTGCGAA',
              haloht56='GTACGCAA',
              haloht57='GTCGTAGA',
              haloht58='GTCTGTCA',
              haloht59='GTGTTCTA',
              haloht60='TAGGATGA',
              haloht61='TATCAGCA',
              haloht62='TCCGTCTA',
              haloht63='TCTTCACA',
              haloht64='TGAAGAGA',
              haloht65='TGGAACAA',
              haloht66='TGGCTTCA',
              haloht67='TGGTGGTA',
              haloht68='TTCACGCA',
              haloht69='AACTCACC',
              haloht70='AAGAGATC',
              haloht71='AAGGACAC',
              haloht72='AATCCGTC',
              haloht73='AATGTTGC',
              haloht74='ACACGACC',
              haloht75='ACAGATTC',
              haloht76='AGATGTAC',
              haloht77='AGCACCTC',
              haloht78='AGCCATGC',
              haloht79='AGGCTAAC',
              haloht80='ATAGCGAC',
              haloht81='ATCATTCC',
              haloht82='ATTGGCTC',
              haloht83='CAAGGAGC',
              haloht84='CACCTTAC',
              haloht85='CCATCCTC',
              haloht86='CCGACAAC',
              haloht87='CCTAATCC',
              haloht88='CCTCTATC',
              haloht89='CGACACAC',
              haloht90='CGGATTGC',
              haloht91='CTAAGGTC',
              haloht92='GAACAGGC',
              haloht93='GACAGTGC',
              haloht94='GAGTTAGC',
              haloht95='GATGAATC',
              haloht96='GCCAAGAC')
BASIC_LOOKUP.update(HALOHT)
INDEX_LOOKUP.update(HALOHT)
INDEX_LOOKUP.update(dict([(k.replace('haloht', 'hht'), v)
                          for k,v in HALOHT.items()]))

# Indexes sureselect1-sureselect16 are the 16 SureSelect indexes.
# From a CSV file "oligo_reference-halo8.csv" provided by Joel Gruselius.
# Identifying prefixes: 'sureselect', 'ss'
SURESELECT = dict(sureselect1='ATCACG',
                  sureselect2='CGATGT',
                  sureselect3='TTAGGC',
                  sureselect4='TGACCA',
                  sureselect5='ACAGTG',
                  sureselect6='GCCAAT',
                  sureselect7='CAGATC',
                  sureselect8='ACTTGA',
                  sureselect9='GATCAG',
                  sureselect10='TAGCTT',
                  sureselect11='GGCTAC',
                  sureselect12='CTTGTA',
                  sureselect13='AAACAT',
                  sureselect14='CAAAAG',
                  sureselect15='GAAACC',
                  sureselect16='AAAGCA')
BASIC_LOOKUP.update(SURESELECT)
INDEX_LOOKUP.update(SURESELECT)
INDEX_LOOKUP.update(dict([(k.replace('sureselect', 'ss'), v)
                          for k,v in SURESELECT.items()]))

# Indexes for TruSeq DNA HT Dual D7-D5
# From the CSV file written out from GenoLogics LIMS 2013-01-24.
# Identifying prefixes: 'dual'
DUAL = dict(dual1='ATTACTCG-TATAGCCT',
            dual2='ATTACTCG-ATAGAGGC',
            dual3='ATTACTCG-CCTATCCT',
            dual4='ATTACTCG-GGCTCTGA',
            dual5='ATTACTCG-AGGCGAAG',
            dual6='ATTACTCG-TAATCTTA',
            dual7='ATTACTCG-CAGGACGT',
            dual8='ATTACTCG-GTACTGAC',
            dual9='TCCGGAGA-TATAGCCT',
            dual10='TCCGGAGA-ATAGAGGC',
            dual11='TCCGGAGA-CCTATCCT',
            dual12='TCCGGAGA-GGCTCTGA',
            dual13='TCCGGAGA-AGGCGAAG',
            dual14='TCCGGAGA-TAATCTTA',
            dual15='TCCGGAGA-CAGGACGT',
            dual16='TCCGGAGA-GTACTGAC',
            dual17='CGCTCATT-TATAGCCT',
            dual18='CGCTCATT-ATAGAGGC',
            dual19='CGCTCATT-CCTATCCT',
            dual20='CGCTCATT-GGCTCTGA',
            dual21='CGCTCATT-AGGCGAAG',
            dual22='CGCTCATT-TAATCTTA',
            dual23='CGCTCATT-CAGGACGT',
            dual24='CGCTCATT-GTACTGAC',
            dual25='GAGATTCC-TATAGCCT',
            dual26='GAGATTCC-ATAGAGGC',
            dual27='GAGATTCC-CCTATCCT',
            dual28='GAGATTCC-GGCTCTGA',
            dual29='GAGATTCC-AGGCGAAG',
            dual30='GAGATTCC-TAATCTTA',
            dual31='GAGATTCC-CAGGACGT',
            dual32='GAGATTCC-GTACTGAC',
            dual33='ATTCAGAA-TATAGCCT',
            dual34='ATTCAGAA-ATAGAGGC',
            dual35='ATTCAGAA-CCTATCCT',
            dual36='ATTCAGAA-GGCTCTGA',
            dual37='ATTCAGAA-AGGCGAAG',
            dual38='ATTCAGAA-TAATCTTA',
            dual39='ATTCAGAA-CAGGACGT',
            dual40='ATTCAGAA-GTACTGAC',
            dual41='GAATTCGT-TATAGCCT',
            dual42='GAATTCGT-ATAGAGGC',
            dual43='GAATTCGT-CCTATCCT',
            dual44='GAATTCGT-GGCTCTGA',
            dual45='GAATTCGT-AGGCGAAG',
            dual46='GAATTCGT-TAATCTTA',
            dual47='GAATTCGT-CAGGACGT',
            dual48='GAATTCGT-GTACTGAC',
            dual49='CTGAAGCT-TATAGCCT',
            dual50='CTGAAGCT-ATAGAGGC',
            dual51='CTGAAGCT-CCTATCCT',
            dual52='CTGAAGCT-GGCTCTGA',
            dual53='CTGAAGCT-AGGCGAAG',
            dual54='CTGAAGCT-TAATCTTA',
            dual55='CTGAAGCT-CAGGACGT',
            dual56='CTGAAGCT-GTACTGAC',
            dual57='TAATGCGC-TATAGCCT',
            dual58='TAATGCGC-ATAGAGGC',
            dual59='TAATGCGC-CCTATCCT',
            dual60='TAATGCGC-GGCTCTGA',
            dual61='TAATGCGC-AGGCGAAG',
            dual62='TAATGCGC-TAATCTTA',
            dual63='TAATGCGC-CAGGACGT',
            dual64='TAATGCGC-GTACTGAC',
            dual65='CGGCTATG-TATAGCCT',
            dual66='CGGCTATG-ATAGAGGC',
            dual67='CGGCTATG-CCTATCCT',
            dual68='CGGCTATG-GGCTCTGA',
            dual69='CGGCTATG-AGGCGAAG',
            dual70='CGGCTATG-TAATCTTA',
            dual71='CGGCTATG-CAGGACGT',
            dual72='CGGCTATG-GTACTGAC',
            dual73='TCCGCGAA-TATAGCCT',
            dual74='TCCGCGAA-ATAGAGGC',
            dual75='TCCGCGAA-CCTATCCT',
            dual76='TCCGCGAA-GGCTCTGA',
            dual77='TCCGCGAA-AGGCGAAG',
            dual78='TCCGCGAA-TAATCTTA',
            dual79='TCCGCGAA-CAGGACGT',
            dual80='TCCGCGAA-GTACTGAC',
            dual81='TCTCGCGC-TATAGCCT',
            dual82='TCTCGCGC-ATAGAGGC',
            dual83='TCTCGCGC-CCTATCCT',
            dual84='TCTCGCGC-GGCTCTGA',
            dual85='TCTCGCGC-AGGCGAAG',
            dual86='TCTCGCGC-TAATCTTA',
            dual87='TCTCGCGC-CAGGACGT',
            dual88='TCTCGCGC-GTACTGAC',
            dual89='AGCGATAG-TATAGCCT',
            dual90='AGCGATAG-ATAGAGGC',
            dual91='AGCGATAG-CCTATCCT',
            dual92='AGCGATAG-GGCTCTGA',
            dual93='AGCGATAG-AGGCGAAG',
            dual94='AGCGATAG-TAATCTTA',
            dual95='AGCGATAG-CAGGACGT',
            dual96='AGCGATAG-GTACTGAC')
BASIC_LOOKUP.update(DUAL)
INDEX_LOOKUP.update(DUAL)

# Indexes for Nextera Dual HT.
# From CSV file provided by Sverker Lundin 2013-05-02
# Additional indexes (>96) from PDF and CSV files from Illumina,
# provided by Anna Leinfelt 2014-12-10.
NEXTERADUAL = dict(
    nxdual1='TAAGGCGA-TAGATCGC',
    nxdual2='TAAGGCGA-CTCTCTAT',
    nxdual3='TAAGGCGA-TATCCTCT',
    nxdual4='TAAGGCGA-AGAGTAGA',
    nxdual5='TAAGGCGA-GTAAGGAG',
    nxdual6='TAAGGCGA-ACTGCATA',
    nxdual7='TAAGGCGA-AAGGAGTA',
    nxdual8='TAAGGCGA-CTAAGCCT',
    nxdual9='CGTACTAG-TAGATCGC',
    nxdual10='CGTACTAG-CTCTCTAT',
    nxdual11='CGTACTAG-TATCCTCT',
    nxdual12='CGTACTAG-AGAGTAGA',
    nxdual13='CGTACTAG-GTAAGGAG',
    nxdual14='CGTACTAG-ACTGCATA',
    nxdual15='CGTACTAG-AAGGAGTA',
    nxdual16='CGTACTAG-CTAAGCCT',
    nxdual17='AGGCAGAA-TAGATCGC',
    nxdual18='AGGCAGAA-CTCTCTAT',
    nxdual19='AGGCAGAA-TATCCTCT',
    nxdual20='AGGCAGAA-AGAGTAGA',
    nxdual21='AGGCAGAA-GTAAGGAG',
    nxdual22='AGGCAGAA-ACTGCATA',
    nxdual23='AGGCAGAA-AAGGAGTA',
    nxdual24='AGGCAGAA-CTAAGCCT',
    nxdual25='TCCTGAGC-TAGATCGC',
    nxdual26='TCCTGAGC-CTCTCTAT',
    nxdual27='TCCTGAGC-TATCCTCT',
    nxdual28='TCCTGAGC-AGAGTAGA',
    nxdual29='TCCTGAGC-GTAAGGAG',
    nxdual30='TCCTGAGC-ACTGCATA',
    nxdual31='TCCTGAGC-AAGGAGTA',
    nxdual32='TCCTGAGC-CTAAGCCT',
    nxdual33='GGACTCCT-TAGATCGC',
    nxdual34='GGACTCCT-CTCTCTAT',
    nxdual35='GGACTCCT-TATCCTCT',
    nxdual36='GGACTCCT-AGAGTAGA',
    nxdual37='GGACTCCT-GTAAGGAG',
    nxdual38='GGACTCCT-ACTGCATA',
    nxdual39='GGACTCCT-AAGGAGTA',
    nxdual40='GGACTCCT-CTAAGCCT',
    nxdual41='TAGGCATG-TAGATCGC',
    nxdual42='TAGGCATG-CTCTCTAT',
    nxdual43='TAGGCATG-TATCCTCT',
    nxdual44='TAGGCATG-AGAGTAGA',
    nxdual45='TAGGCATG-GTAAGGAG',
    nxdual46='TAGGCATG-ACTGCATA',
    nxdual47='TAGGCATG-AAGGAGTA',
    nxdual48='TAGGCATG-CTAAGCCT',
    nxdual49='CTCTCTAC-TAGATCGC',
    nxdual50='CTCTCTAC-CTCTCTAT',
    nxdual51='CTCTCTAC-TATCCTCT',
    nxdual52='CTCTCTAC-AGAGTAGA',
    nxdual53='CTCTCTAC-GTAAGGAG',
    nxdual54='CTCTCTAC-ACTGCATA',
    nxdual55='CTCTCTAC-AAGGAGTA',
    nxdual56='CTCTCTAC-CTAAGCCT',
    nxdual57='CAGAGAGG-TAGATCGC',
    nxdual58='CAGAGAGG-CTCTCTAT',
    nxdual59='CAGAGAGG-TATCCTCT',
    nxdual60='CAGAGAGG-AGAGTAGA',
    nxdual61='CAGAGAGG-GTAAGGAG',
    nxdual62='CAGAGAGG-ACTGCATA',
    nxdual63='CAGAGAGG-AAGGAGTA',
    nxdual64='CAGAGAGG-CTAAGCCT',
    nxdual65='GCTACGCT-TAGATCGC',
    nxdual66='GCTACGCT-CTCTCTAT',
    nxdual67='GCTACGCT-TATCCTCT',
    nxdual68='GCTACGCT-AGAGTAGA',
    nxdual69='GCTACGCT-GTAAGGAG',
    nxdual70='GCTACGCT-ACTGCATA',
    nxdual71='GCTACGCT-AAGGAGTA',
    nxdual72='GCTACGCT-CTAAGCCT',
    nxdual73='CGAGGCTG-TAGATCGC',
    nxdual74='CGAGGCTG-CTCTCTAT',
    nxdual75='CGAGGCTG-TATCCTCT',
    nxdual76='CGAGGCTG-AGAGTAGA',
    nxdual77='CGAGGCTG-GTAAGGAG',
    nxdual78='CGAGGCTG-ACTGCATA',
    nxdual79='CGAGGCTG-AAGGAGTA',
    nxdual80='CGAGGCTG-CTAAGCCT',
    nxdual81='AAGAGGCA-TAGATCGC',
    nxdual82='AAGAGGCA-CTCTCTAT',
    nxdual83='AAGAGGCA-TATCCTCT',
    nxdual84='AAGAGGCA-AGAGTAGA',
    nxdual85='AAGAGGCA-GTAAGGAG',
    nxdual86='AAGAGGCA-ACTGCATA',
    nxdual87='AAGAGGCA-AAGGAGTA',
    nxdual88='AAGAGGCA-CTAAGCCT',
    nxdual89='GTAGAGGA-TAGATCGC',
    nxdual90='GTAGAGGA-CTCTCTAT',
    nxdual91='GTAGAGGA-TATCCTCT',
    nxdual92='GTAGAGGA-AGAGTAGA',
    nxdual93='GTAGAGGA-GTAAGGAG',
    nxdual94='GTAGAGGA-ACTGCATA',
    nxdual95='GTAGAGGA-AAGGAGTA',
    nxdual96='GTAGAGGA-CTAAGCCT',
    nxdual97='GCTCATGA-CTCTCTAT',
    nxdual98='GCTCATGA-TATCCTCT',
    nxdual99='GCTCATGA-AGAGTAGA',
    nxdual100='GCTCATGA-GTAAGGAG',
    nxdual101='GCTCATGA-ACTGCATA',
    nxdual102='GCTCATGA-AAGGAGTA',
    nxdual103='GCTCATGA-CTAAGCCT',
    nxdual104='ATCTCAGG-CTCTCTAT',
    nxdual105='ATCTCAGG-TATCCTCT',
    nxdual106='ATCTCAGG-AGAGTAGA',
    nxdual107='ATCTCAGG-GTAAGGAG',
    nxdual108='ATCTCAGG-ACTGCATA',
    nxdual109='ATCTCAGG-AAGGAGTA',
    nxdual110='ATCTCAGG-CTAAGCCT',
    nxdual111='ACTCGCTA-CTCTCTAT',
    nxdual112='ACTCGCTA-TATCCTCT',
    nxdual113='ACTCGCTA-AGAGTAGA',
    nxdual114='ACTCGCTA-GTAAGGAG',
    nxdual115='ACTCGCTA-ACTGCATA',
    nxdual116='ACTCGCTA-AAGGAGTA',
    nxdual117='ACTCGCTA-CTAAGCCT',
    nxdual118='GGAGCTAC-CTCTCTAT',
    nxdual119='GGAGCTAC-TATCCTCT',
    nxdual120='GGAGCTAC-AGAGTAGA',
    nxdual121='GGAGCTAC-GTAAGGAG',
    nxdual122='GGAGCTAC-ACTGCATA',
    nxdual123='GGAGCTAC-AAGGAGTA',
    nxdual124='GGAGCTAC-CTAAGCCT',
    nxdual125='GCGTAGTA-CTCTCTAT',
    nxdual126='GCGTAGTA-TATCCTCT',
    nxdual127='GCGTAGTA-AGAGTAGA',
    nxdual128='GCGTAGTA-GTAAGGAG',
    nxdual129='GCGTAGTA-ACTGCATA',
    nxdual130='GCGTAGTA-AAGGAGTA',
    nxdual131='GCGTAGTA-CTAAGCCT',
    nxdual132='CGGAGCCT-CTCTCTAT',
    nxdual133='CGGAGCCT-TATCCTCT',
    nxdual134='CGGAGCCT-AGAGTAGA',
    nxdual135='CGGAGCCT-GTAAGGAG',
    nxdual136='CGGAGCCT-ACTGCATA',
    nxdual137='CGGAGCCT-AAGGAGTA',
    nxdual138='CGGAGCCT-CTAAGCCT',
    nxdual139='TACGCTGC-CTCTCTAT',
    nxdual140='TACGCTGC-TATCCTCT',
    nxdual141='TACGCTGC-AGAGTAGA',
    nxdual142='TACGCTGC-GTAAGGAG',
    nxdual143='TACGCTGC-ACTGCATA',
    nxdual144='TACGCTGC-AAGGAGTA',
    nxdual145='TACGCTGC-CTAAGCCT',
    nxdual146='ATGCGCAG-CTCTCTAT',
    nxdual147='ATGCGCAG-TATCCTCT',
    nxdual148='ATGCGCAG-AGAGTAGA',
    nxdual149='ATGCGCAG-GTAAGGAG',
    nxdual150='ATGCGCAG-ACTGCATA',
    nxdual151='ATGCGCAG-AAGGAGTA',
    nxdual152='ATGCGCAG-CTAAGCCT',
    nxdual153='TAGCGCTC-CTCTCTAT',
    nxdual154='TAGCGCTC-TATCCTCT',
    nxdual155='TAGCGCTC-AGAGTAGA',
    nxdual156='TAGCGCTC-GTAAGGAG',
    nxdual157='TAGCGCTC-ACTGCATA',
    nxdual158='TAGCGCTC-AAGGAGTA',
    nxdual159='TAGCGCTC-CTAAGCCT',
    nxdual160='ACTGAGCG-CTCTCTAT',
    nxdual161='ACTGAGCG-TATCCTCT',
    nxdual162='ACTGAGCG-AGAGTAGA',
    nxdual163='ACTGAGCG-GTAAGGAG',
    nxdual164='ACTGAGCG-ACTGCATA',
    nxdual165='ACTGAGCG-AAGGAGTA',
    nxdual166='ACTGAGCG-CTAAGCCT',
    nxdual167='CCTAAGAC-CTCTCTAT',
    nxdual168='CCTAAGAC-TATCCTCT',
    nxdual169='CCTAAGAC-AGAGTAGA',
    nxdual170='CCTAAGAC-GTAAGGAG',
    nxdual171='CCTAAGAC-ACTGCATA',
    nxdual172='CCTAAGAC-AAGGAGTA',
    nxdual173='CCTAAGAC-CTAAGCCT',
    nxdual174='CGATCAGT-CTCTCTAT',
    nxdual175='CGATCAGT-TATCCTCT',
    nxdual176='CGATCAGT-AGAGTAGA',
    nxdual177='CGATCAGT-GTAAGGAG',
    nxdual178='CGATCAGT-ACTGCATA',
    nxdual179='CGATCAGT-AAGGAGTA',
    nxdual180='CGATCAGT-CTAAGCCT',
    nxdual181='TGCAGCTA-CTCTCTAT',
    nxdual182='TGCAGCTA-TATCCTCT',
    nxdual183='TGCAGCTA-AGAGTAGA',
    nxdual184='TGCAGCTA-GTAAGGAG',
    nxdual185='TGCAGCTA-ACTGCATA',
    nxdual186='TGCAGCTA-AAGGAGTA',
    nxdual187='TGCAGCTA-CTAAGCCT',
    nxdual188='TCGACGTC-CTCTCTAT',
    nxdual189='TCGACGTC-TATCCTCT',
    nxdual190='TCGACGTC-AGAGTAGA',
    nxdual191='TCGACGTC-GTAAGGAG',
    nxdual192='TCGACGTC-ACTGCATA',
    nxdual193='TCGACGTC-AAGGAGTA',
    nxdual194='TCGACGTC-CTAAGCCT',
    nxdual195='TAAGGCGA-CGTCTAAT',
    nxdual196='TAAGGCGA-TCTCTCCG',
    nxdual197='TAAGGCGA-TCGACTAG',
    nxdual198='TAAGGCGA-TTCTAGCT',
    nxdual199='TAAGGCGA-CCTAGAGT',
    nxdual200='TAAGGCGA-GCGTAAGA',
    nxdual201='TAAGGCGA-CTATTAAG',
    nxdual202='TAAGGCGA-AAGGCTAT',
    nxdual203='TAAGGCGA-GAGCCTTA',
    nxdual204='TAAGGCGA-TTATGCGA',
    nxdual205='CGTACTAG-CGTCTAAT',
    nxdual206='CGTACTAG-TCTCTCCG',
    nxdual207='CGTACTAG-TCGACTAG',
    nxdual208='CGTACTAG-TTCTAGCT',
    nxdual209='CGTACTAG-CCTAGAGT',
    nxdual210='CGTACTAG-GCGTAAGA',
    nxdual211='CGTACTAG-CTATTAAG',
    nxdual212='CGTACTAG-AAGGCTAT',
    nxdual213='CGTACTAG-GAGCCTTA',
    nxdual214='CGTACTAG-TTATGCGA',
    nxdual215='AGGCAGAA-CGTCTAAT',
    nxdual216='AGGCAGAA-TCTCTCCG',
    nxdual217='AGGCAGAA-TCGACTAG',
    nxdual218='AGGCAGAA-TTCTAGCT',
    nxdual219='AGGCAGAA-CCTAGAGT',
    nxdual220='AGGCAGAA-GCGTAAGA',
    nxdual221='AGGCAGAA-CTATTAAG',
    nxdual222='AGGCAGAA-AAGGCTAT',
    nxdual223='AGGCAGAA-GAGCCTTA',
    nxdual224='AGGCAGAA-TTATGCGA',
    nxdual225='TCCTGAGC-CGTCTAAT',
    nxdual226='TCCTGAGC-TCTCTCCG',
    nxdual227='TCCTGAGC-TCGACTAG',
    nxdual228='TCCTGAGC-TTCTAGCT',
    nxdual229='TCCTGAGC-CCTAGAGT',
    nxdual230='TCCTGAGC-GCGTAAGA',
    nxdual231='TCCTGAGC-CTATTAAG',
    nxdual232='TCCTGAGC-AAGGCTAT',
    nxdual233='TCCTGAGC-GAGCCTTA',
    nxdual234='TCCTGAGC-TTATGCGA',
    nxdual235='GGACTCCT-CGTCTAAT',
    nxdual236='GGACTCCT-TCTCTCCG',
    nxdual237='GGACTCCT-TCGACTAG',
    nxdual238='GGACTCCT-TTCTAGCT',
    nxdual239='GGACTCCT-CCTAGAGT',
    nxdual240='GGACTCCT-GCGTAAGA',
    nxdual241='GGACTCCT-CTATTAAG',
    nxdual242='GGACTCCT-AAGGCTAT',
    nxdual243='GGACTCCT-GAGCCTTA',
    nxdual244='GGACTCCT-TTATGCGA',
    nxdual245='TAGGCATG-CGTCTAAT',
    nxdual246='TAGGCATG-TCTCTCCG',
    nxdual247='TAGGCATG-TCGACTAG',
    nxdual248='TAGGCATG-TTCTAGCT',
    nxdual249='TAGGCATG-CCTAGAGT',
    nxdual250='TAGGCATG-GCGTAAGA',
    nxdual251='TAGGCATG-CTATTAAG',
    nxdual252='TAGGCATG-AAGGCTAT',
    nxdual253='TAGGCATG-GAGCCTTA',
    nxdual254='TAGGCATG-TTATGCGA',)

NEXTERADUAL.update(dict(
        nxdual255='CTCTCTAC-CGTCTAAT',
        nxdual256='CTCTCTAC-TCTCTCCG',
        nxdual257='CTCTCTAC-TCGACTAG',
        nxdual258='CTCTCTAC-TTCTAGCT',
        nxdual259='CTCTCTAC-CCTAGAGT',
        nxdual260='CTCTCTAC-GCGTAAGA',
        nxdual261='CTCTCTAC-CTATTAAG',
        nxdual262='CTCTCTAC-AAGGCTAT',
        nxdual263='CTCTCTAC-GAGCCTTA',
        nxdual264='CTCTCTAC-TTATGCGA',
        nxdual265='CAGAGAGG-CGTCTAAT',
        nxdual266='CAGAGAGG-TCTCTCCG',
        nxdual267='CAGAGAGG-TCGACTAG',
        nxdual268='CAGAGAGG-TTCTAGCT',
        nxdual269='CAGAGAGG-CCTAGAGT',
        nxdual270='CAGAGAGG-GCGTAAGA',
        nxdual271='CAGAGAGG-CTATTAAG',
        nxdual272='CAGAGAGG-AAGGCTAT',
        nxdual273='CAGAGAGG-GAGCCTTA',
        nxdual274='CAGAGAGG-TTATGCGA',
        nxdual275='GCTACGCT-CGTCTAAT',
        nxdual276='GCTACGCT-TCTCTCCG',
        nxdual277='GCTACGCT-TCGACTAG',
        nxdual278='GCTACGCT-TTCTAGCT',
        nxdual279='GCTACGCT-CCTAGAGT',
        nxdual280='GCTACGCT-GCGTAAGA',
        nxdual281='GCTACGCT-CTATTAAG',
        nxdual282='GCTACGCT-AAGGCTAT',
        nxdual283='GCTACGCT-GAGCCTTA',
        nxdual284='GCTACGCT-TTATGCGA',
        nxdual285='CGAGGCTG-CGTCTAAT',
        nxdual286='CGAGGCTG-TCTCTCCG',
        nxdual287='CGAGGCTG-TCGACTAG',
        nxdual288='CGAGGCTG-TTCTAGCT',
        nxdual289='CGAGGCTG-CCTAGAGT',
        nxdual290='CGAGGCTG-GCGTAAGA',
        nxdual291='CGAGGCTG-CTATTAAG',
        nxdual292='CGAGGCTG-AAGGCTAT',
        nxdual293='CGAGGCTG-GAGCCTTA',
        nxdual294='CGAGGCTG-TTATGCGA',
        nxdual295='AAGAGGCA-CGTCTAAT',
        nxdual296='AAGAGGCA-TCTCTCCG',
        nxdual297='AAGAGGCA-TCGACTAG',
        nxdual298='AAGAGGCA-TTCTAGCT',
        nxdual299='AAGAGGCA-CCTAGAGT',
        nxdual300='AAGAGGCA-GCGTAAGA',
        nxdual301='AAGAGGCA-CTATTAAG',
        nxdual302='AAGAGGCA-AAGGCTAT',
        nxdual303='AAGAGGCA-GAGCCTTA',
        nxdual304='AAGAGGCA-TTATGCGA',
        nxdual305='GTAGAGGA-CGTCTAAT',
        nxdual306='GTAGAGGA-TCTCTCCG',
        nxdual307='GTAGAGGA-TCGACTAG',
        nxdual308='GTAGAGGA-TTCTAGCT',
        nxdual309='GTAGAGGA-CCTAGAGT',
        nxdual310='GTAGAGGA-GCGTAAGA',
        nxdual311='GTAGAGGA-CTATTAAG',
        nxdual312='GTAGAGGA-AAGGCTAT',
        nxdual313='GTAGAGGA-GAGCCTTA',
        nxdual314='GTAGAGGA-TTATGCGA',
        nxdual315='GCTCATGA-CGTCTAAT',
        nxdual316='GCTCATGA-TCTCTCCG',
        nxdual317='GCTCATGA-TCGACTAG',
        nxdual318='GCTCATGA-TTCTAGCT',
        nxdual319='GCTCATGA-CCTAGAGT',
        nxdual320='GCTCATGA-GCGTAAGA',
        nxdual321='GCTCATGA-CTATTAAG',
        nxdual322='GCTCATGA-AAGGCTAT',
        nxdual323='GCTCATGA-GAGCCTTA',
        nxdual324='GCTCATGA-TTATGCGA',
        nxdual325='ATCTCAGG-CGTCTAAT',
        nxdual326='ATCTCAGG-TCTCTCCG',
        nxdual327='ATCTCAGG-TCGACTAG',
        nxdual328='ATCTCAGG-TTCTAGCT',
        nxdual329='ATCTCAGG-CCTAGAGT',
        nxdual330='ATCTCAGG-GCGTAAGA',
        nxdual331='ATCTCAGG-CTATTAAG',
        nxdual332='ATCTCAGG-AAGGCTAT',
        nxdual333='ATCTCAGG-GAGCCTTA',
        nxdual334='ATCTCAGG-TTATGCGA',
        nxdual335='ACTCGCTA-CGTCTAAT',
        nxdual336='ACTCGCTA-TCTCTCCG',
        nxdual337='ACTCGCTA-TCGACTAG',
        nxdual338='ACTCGCTA-TTCTAGCT',
        nxdual339='ACTCGCTA-CCTAGAGT',
        nxdual340='ACTCGCTA-GCGTAAGA',
        nxdual341='ACTCGCTA-CTATTAAG',
        nxdual342='ACTCGCTA-AAGGCTAT',
        nxdual343='ACTCGCTA-GAGCCTTA',
        nxdual344='ACTCGCTA-TTATGCGA',
        nxdual345='GGAGCTAC-CGTCTAAT',
        nxdual346='GGAGCTAC-TCTCTCCG',
        nxdual347='GGAGCTAC-TCGACTAG',
        nxdual348='GGAGCTAC-TTCTAGCT',
        nxdual349='GGAGCTAC-CCTAGAGT',
        nxdual350='GGAGCTAC-GCGTAAGA',
        nxdual351='GGAGCTAC-CTATTAAG',
        nxdual352='GGAGCTAC-AAGGCTAT',
        nxdual353='GGAGCTAC-GAGCCTTA',
        nxdual354='GGAGCTAC-TTATGCGA',
        nxdual355='GCGTAGTA-CGTCTAAT',
        nxdual356='GCGTAGTA-TCTCTCCG',
        nxdual357='GCGTAGTA-TCGACTAG',
        nxdual358='GCGTAGTA-TTCTAGCT',
        nxdual359='GCGTAGTA-CCTAGAGT',
        nxdual360='GCGTAGTA-GCGTAAGA',
        nxdual361='GCGTAGTA-CTATTAAG',
        nxdual362='GCGTAGTA-AAGGCTAT',
        nxdual363='GCGTAGTA-GAGCCTTA',
        nxdual364='GCGTAGTA-TTATGCGA',
        nxdual365='CGGAGCCT-CGTCTAAT',
        nxdual366='CGGAGCCT-TCTCTCCG',
        nxdual367='CGGAGCCT-TCGACTAG',
        nxdual368='CGGAGCCT-TTCTAGCT',
        nxdual369='CGGAGCCT-CCTAGAGT',
        nxdual370='CGGAGCCT-GCGTAAGA',
        nxdual371='CGGAGCCT-CTATTAAG',
        nxdual372='CGGAGCCT-AAGGCTAT',
        nxdual373='CGGAGCCT-GAGCCTTA',
        nxdual374='CGGAGCCT-TTATGCGA',
        nxdual375='TACGCTGC-CGTCTAAT',
        nxdual376='TACGCTGC-TCTCTCCG',
        nxdual377='TACGCTGC-TCGACTAG',
        nxdual378='TACGCTGC-TTCTAGCT',
        nxdual379='TACGCTGC-CCTAGAGT',
        nxdual380='TACGCTGC-GCGTAAGA',
        nxdual381='TACGCTGC-CTATTAAG',
        nxdual382='TACGCTGC-AAGGCTAT',
        nxdual383='TACGCTGC-GAGCCTTA',
        nxdual384='TACGCTGC-TTATGCGA',
        nxdual385='ATGCGCAG-CGTCTAAT',
        nxdual386='ATGCGCAG-TCTCTCCG',
        nxdual387='ATGCGCAG-TCGACTAG',
        nxdual388='ATGCGCAG-TTCTAGCT',
        nxdual389='ATGCGCAG-CCTAGAGT',
        nxdual390='ATGCGCAG-GCGTAAGA',
        nxdual391='ATGCGCAG-CTATTAAG',
        nxdual392='ATGCGCAG-AAGGCTAT',
        nxdual393='ATGCGCAG-GAGCCTTA',
        nxdual394='ATGCGCAG-TTATGCGA',
        nxdual395='TAGCGCTC-CGTCTAAT',
        nxdual396='TAGCGCTC-TCTCTCCG',
        nxdual397='TAGCGCTC-TCGACTAG',
        nxdual398='TAGCGCTC-TTCTAGCT',
        nxdual399='TAGCGCTC-CCTAGAGT',
        nxdual400='TAGCGCTC-GCGTAAGA',
        nxdual401='TAGCGCTC-CTATTAAG',
        nxdual402='TAGCGCTC-AAGGCTAT',
        nxdual403='TAGCGCTC-GAGCCTTA',
        nxdual404='TAGCGCTC-TTATGCGA',
        nxdual405='ACTGAGCG-CGTCTAAT',
        nxdual406='ACTGAGCG-TCTCTCCG',
        nxdual407='ACTGAGCG-TCGACTAG',
        nxdual408='ACTGAGCG-TTCTAGCT',
        nxdual409='ACTGAGCG-CCTAGAGT',
        nxdual410='ACTGAGCG-GCGTAAGA',
        nxdual411='ACTGAGCG-CTATTAAG',
        nxdual412='ACTGAGCG-AAGGCTAT',
        nxdual413='ACTGAGCG-GAGCCTTA',
        nxdual414='ACTGAGCG-TTATGCGA',
        nxdual415='CCTAAGAC-CGTCTAAT',
        nxdual416='CCTAAGAC-TCTCTCCG',
        nxdual417='CCTAAGAC-TCGACTAG',
        nxdual418='CCTAAGAC-TTCTAGCT',
        nxdual419='CCTAAGAC-CCTAGAGT',
        nxdual420='CCTAAGAC-GCGTAAGA',
        nxdual421='CCTAAGAC-CTATTAAG',
        nxdual422='CCTAAGAC-AAGGCTAT',
        nxdual423='CCTAAGAC-GAGCCTTA',
        nxdual424='CCTAAGAC-TTATGCGA',
        nxdual425='CGATCAGT-CGTCTAAT',
        nxdual426='CGATCAGT-TCTCTCCG',
        nxdual427='CGATCAGT-TCGACTAG',
        nxdual428='CGATCAGT-TTCTAGCT',
        nxdual429='CGATCAGT-CCTAGAGT',
        nxdual430='CGATCAGT-GCGTAAGA',
        nxdual431='CGATCAGT-CTATTAAG',
        nxdual432='CGATCAGT-AAGGCTAT',
        nxdual433='CGATCAGT-GAGCCTTA',
        nxdual434='CGATCAGT-TTATGCGA',
        nxdual435='TGCAGCTA-CGTCTAAT',
        nxdual436='TGCAGCTA-TCTCTCCG',
        nxdual437='TGCAGCTA-TCGACTAG',
        nxdual438='TGCAGCTA-TTCTAGCT',
        nxdual439='TGCAGCTA-CCTAGAGT',
        nxdual440='TGCAGCTA-GCGTAAGA',
        nxdual441='TGCAGCTA-CTATTAAG',
        nxdual442='TGCAGCTA-AAGGCTAT',
        nxdual443='TGCAGCTA-GAGCCTTA',
        nxdual444='TGCAGCTA-TTATGCGA',
        nxdual445='TCGACGTC-CGTCTAAT',
        nxdual446='TCGACGTC-TCTCTCCG',
        nxdual447='TCGACGTC-TCGACTAG',
        nxdual448='TCGACGTC-TTCTAGCT',
        nxdual449='TCGACGTC-CCTAGAGT',
        nxdual450='TCGACGTC-GCGTAAGA',
        nxdual451='TCGACGTC-CTATTAAG',
        nxdual452='TCGACGTC-AAGGCTAT',
        nxdual453='TCGACGTC-GAGCCTTA',
        nxdual454='TCGACGTC-TTATGCGA',
        )
                   )
BASIC_LOOKUP.update(NEXTERADUAL)
INDEX_LOOKUP.update(NEXTERADUAL)


# Indexes converting Haloplex to dual
# Transformation deduced from Excel file provided by Sverker Lundin 2013-07-11
HALOHTDUAL = dict()
suffix = '-TCTTTCCC'
for key, value in HALOHT.iteritems():
    HALOHTDUAL[key + 'dual'] = value + suffix
BASIC_LOOKUP.update(HALOHTDUAL)
INDEX_LOOKUP.update(HALOHTDUAL)


# Illumina indexes converted to dual.
# From Excel file provided by Sverker Lundin 2013-07-11
ILLUMINADUAL = dict(index1dual='ATCACGAT-TCTTTCCC',
                    index2dual='CGATGTAT-TCTTTCCC',
                    index3dual='TTAGGCAT-TCTTTCCC',
                    index4dual='TGACCAAT-TCTTTCCC',
                    index5dual='ACAGTGAT-TCTTTCCC',
                    index6dual='GCCAATAT-TCTTTCCC',
                    index7dual='CAGATCAT-TCTTTCCC',
                    index8dual='ACTTGAAT-TCTTTCCC',
                    index9dual='GATCAGAT-TCTTTCCC',
                    index10dual='TAGCTTAT-TCTTTCCC',
                    index11dual='GGCTACAT-TCTTTCCC',
                    index12dual='CTTGTAAT-TCTTTCCC',
                    index13dual='AGTCAACA-TCTTTCCC',
                    index14dual='AGTTCCGT-TCTTTCCC',
                    index15dual='ATGTCAGA-TCTTTCCC',
                    index16dual='CCGTCCCG-TCTTTCCC',
                    index17dual='GTAGAGAT-TCTTTCCC', # Added 2013-10-14: "AT"?
                    index18dual='GTCCGCAC-TCTTTCCC',
                    index19dual='GTGAAACG-TCTTTCCC',
                    index20dual='GTGGCCTT-TCTTTCCC',
                    index21dual='GTTTCGGA-TCTTTCCC',
                    index22dual='CGTACGTA-TCTTTCCC',
                    index23dual='GAGTGGAT-TCTTTCCC',
                    index25dual='ACTGATAT-TCTTTCCC',
                    index27dual='ATTCCTTT-TCTTTCCC')
BASIC_LOOKUP.update(ILLUMINADUAL)
INDEX_LOOKUP.update(ILLUMINADUAL)

# SureSelect XT indexes
# From table 85 on page 158 of http://www.chem.agilent.com/library/usermanuals/public/g7550-90000.pdf
SURESELECT_XT = dict(xta01='ATGCCTAA',
                    xta02='AGCAGGAA',
                    xta03='ATCATTCC',
                    xta04='AACTCACC',
                    xta05='AACGCTTA',
                    xta06='AGCCATGC',
                    xta07='ACGTATCA',
                    xta08='CAGCGTTA',
                    xta09='CTCAATGA',
                    xta10='AATGTTGC',
                    xta11='CCAGTTCA',
                    xta12='CAAGGAGC',
                    xtb01='GAATCTGA',
                    xtb02='GAGCTGAA',
                    xtb03='GCCACATA',
                    xtb04='GCTAACGA',
                    xtb05='GGAGAACA',
                    xtb06='GTACGCAA',
                    xtb07='GTCTGTCA',
                    xtb08='TAGGATGA',
                    xtb09='TCCGTCTA',
                    xtb10='TGAAGAGA',
                    xtb11='TGGCTTCA',
                    xtb12='TTCACGCA',
                    xtc01='AACGTGAT',
                    xtc02='AAACATCG',
                    xtc03='ACCACTGT',
                    xtc04='CAGATCTG',
                    xtc05='CATCAAGT',
                    xtc06='AGTACAAG',
                    xtc07='CTAAGGTC',
                    xtc08='AGTGGTCA',
                    xtc09='AGGCTAAC',
                    xtc10='AGATCGCA',
                    xtc11='CGACTGGA',
                    xtc12='CACCTTAC',
                    xtd01='CACTTCGA',
                    xtd02='GAGTTAGC',
                    xtd03='CTGGCATA',
                    xtd04='ATCCTGTA',
                    xtd05='AAGGTACA',
                    xtd06='ACATTGGC',
                    xtd07='CGACACAC',
                    xtd08='ACAGCAGA',
                    xtd09='CCATCCTC',
                    xtd10='AAGAGATC',
                    xtd11='CAAGACTA',
                    xtd12='AAGACGGA',
                    xte01='GCCAAGAC',
                    xte02='CGAACTTA',
                    xte03='ACCTCCAA',
                    xte04='CTGTAGCC',
                    xte05='CGCTGATC',
                    xte06='ATTGAGGA',
                    xte07='CCGTGAGA',
                    xte08='CATACCAA',
                    xte09='AGATGTAC',
                    xte10='CAACCACA',
                    xte11='CCTCCTGA',
                    xte12='ACACAGAA',
                    xtf01='GACTAGTA',
                    xtf02='GATAGACA',
                    xtf03='GCGAGTAA',
                    xtf04='GCTCGGTA',
                    xtf05='GGTGCGAA',
                    xtf06='GTCGTAGA',
                    xtf07='GTGTTCTA',
                    xtf08='TATCAGCA',
                    xtf09='TCTTCACA',
                    xtf10='TGGAACAA',
                    xtf11='TGGTGGTA',
                    xtf12='GAACAGGC',
                    xtg01='ATTGGCTC',
                    xtg02='AAGGACAC',
                    xtg03='ACTATGCA',
                    xtg04='ACACGACC',
                    xtg05='CCTAATCC',
                    xtg06='AGAGTCAA',
                    xtg07='CAATGGAA',
                    xtg08='ATAGCGAC',
                    xtg09='CCGAAGTA',
                    xtg10='CCTCTATC',
                    xtg11='AACAACCA',
                    xtg12='AACCGAGA',
                    xth01='GATGAATC',
                    xth02='GACAGTGC',
                    xth03='CGGATTGC',
                    xth04='AGTCACTA',
                    xth05='CTGAGCCA',
                    xth06='CCGACAAC',
                    xth07='AGCACCTC',
                    xth08='ACGCTCGA',
                    xth09='CGCATACA',
                    xth10='ACAGATTC',
                    xth11='AATCCGTC',
                    xth12='ACAAGCTA')
BASIC_LOOKUP.update(SURESELECT_XT)
INDEX_LOOKUP.update(SURESELECT_XT)


# Finally, allow all upper-case variants of index designations.
INDEX_LOOKUP.update(dict([(k.upper(), v)
                          for k,v in INDEX_LOOKUP.items()]))
